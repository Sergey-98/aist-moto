{"ast":null,"code":"export function reducer(state, action) {\n  switch (action.type) {\n    case 'resetModal':\n      state.isOpenModal = action.payload.isOpenModal;\n      return {\n        ...state\n      };\n    case 'resetLoading':\n      state.loading = action.payload.loading;\n      return {\n        ...state\n      };\n    case 'resetModalCallback':\n      state.isOpenModalCallback = action.payload.isOpenModalCallback;\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n}\nexport function formReducer(state, action) {\n  switch (action.type) {\n    case 'name':\n      state.name = action.payloadForm.name;\n      return {\n        ...state\n      };\n    case 'phoneNumber':\n      state.phoneNumber = action.payloadForm.phoneNumber;\n      return {\n        ...state\n      };\n    case 'email':\n      state.email = action.payloadForm.email;\n      return {\n        ...state\n      };\n    case 'message':\n      state.message = action.payloadForm.message;\n      return {\n        ...state\n      };\n    case 'model':\n      state.model = action.payloadForm.model;\n      return {\n        ...state\n      };\n    case 'errorName':\n      // state.isOpenRequisites = action.payload.isOpenRequisites;\n      return {\n        ...state\n      };\n    case 'errorNumber':\n      state.errorNumber = action.payloadForm.errorNumber;\n      return {\n        ...state\n      };\n    case 'errorEmail':\n      state.errorEmail = action.payloadForm.errorEmail;\n      return {\n        ...state\n      };\n      return {\n        ...state\n      };\n    case 'errorMessage':\n      // state.isOpenRequisites = action.payload.isOpenRequisites;\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n}\nexport function formCallbackReducer(state, action) {\n  switch (action.type) {\n    case 'name':\n      state.name = action.payloadFormCallback.name;\n      return {\n        ...state\n      };\n    case 'phoneNumber':\n      state.phoneNumber = action.payloadFormCallback.phoneNumber;\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n}\nexport function forkliftReducer(state, action) {\n  switch (action.type) {\n    case 'resetType':\n      state.type = action.payload.type;\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["reducer","state","action","type","isOpenModal","payload","loading","isOpenModalCallback","formReducer","name","payloadForm","phoneNumber","email","message","model","errorNumber","errorEmail","formCallbackReducer","payloadFormCallback","forkliftReducer"],"sources":["D:/Папки пользователя/Desktop/Сайты/aist-moto/src/reducer/reducer.ts"],"sourcesContent":["import { \r\n    DispatchType, \r\n    State, \r\n    FormParamState,  \r\n    DispatchFormType,\r\n    FormCallbackParamState,\r\n    DispatchFormCallbackType,\r\n    ForkliftState,\r\n    DispatchForkliftType,\r\n} from 'types/types';\r\n\r\nexport function reducer(state: State, action: DispatchType) {\r\n    switch (action.type) {\r\n        case 'resetModal':\r\n            state.isOpenModal = action.payload.isOpenModal;\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'resetLoading':\r\n            state.loading = action.payload.loading;\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'resetModalCallback':\r\n            state.isOpenModalCallback = action.payload.isOpenModalCallback;\r\n            return {\r\n                ...state,\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport function formReducer(state: FormParamState, action: DispatchFormType) {\r\n    switch (action.type) {\r\n        case 'name':\r\n        state.name = action.payloadForm.name;\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'phoneNumber':\r\n        state.phoneNumber = action.payloadForm.phoneNumber;\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'email':\r\n        state.email = action.payloadForm.email;\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'message':\r\n        state.message = action.payloadForm.message;\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'model':\r\n        state.model = action.payloadForm.model;\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'errorName':\r\n        // state.isOpenRequisites = action.payload.isOpenRequisites;\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'errorNumber':\r\n        state.errorNumber = action.payloadForm.errorNumber;\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'errorEmail':\r\n        state.errorEmail = action.payloadForm.errorEmail;\r\n        return {\r\n            ...state,\r\n        };\r\n        return {\r\n            ...state,\r\n        };\r\n        case 'errorMessage':\r\n        // state.isOpenRequisites = action.payload.isOpenRequisites;\r\n        return {\r\n            ...state,\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport function formCallbackReducer(\r\n    state: FormCallbackParamState,\r\n    action: DispatchFormCallbackType\r\n    ) {\r\n        switch (action.type) {\r\n        case 'name':\r\n            state.name = action.payloadFormCallback.name;\r\n            return {\r\n            ...state,\r\n            };\r\n        case 'phoneNumber':\r\n            state.phoneNumber = action.payloadFormCallback.phoneNumber;\r\n            return {\r\n            ...state,\r\n            };\r\n        default:\r\n            return state;\r\n        }\r\n    }\r\n\r\nexport function forkliftReducer(state: ForkliftState, action: DispatchForkliftType) {\r\n    switch (action.type) {\r\n        case 'resetType':\r\n            state.type = action.payload.type;\r\n        return {\r\n            ...state,\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}"],"mappings":"AAWA,OAAO,SAASA,OAAO,CAACC,KAAY,EAAEC,MAAoB,EAAE;EACxD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,YAAY;MACbF,KAAK,CAACG,WAAW,GAAGF,MAAM,CAACG,OAAO,CAACD,WAAW;MAClD,OAAO;QACH,GAAGH;MACP,CAAC;IACD,KAAK,cAAc;MACfA,KAAK,CAACK,OAAO,GAAGJ,MAAM,CAACG,OAAO,CAACC,OAAO;MAC1C,OAAO;QACH,GAAGL;MACP,CAAC;IACD,KAAK,oBAAoB;MACrBA,KAAK,CAACM,mBAAmB,GAAGL,MAAM,CAACG,OAAO,CAACE,mBAAmB;MAC9D,OAAO;QACH,GAAGN;MACP,CAAC;IACL;MACA,OAAOA,KAAK;EAAC;AAErB;AAEA,OAAO,SAASO,WAAW,CAACP,KAAqB,EAAEC,MAAwB,EAAE;EACzE,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,MAAM;MACXF,KAAK,CAACQ,IAAI,GAAGP,MAAM,CAACQ,WAAW,CAACD,IAAI;MACpC,OAAO;QACH,GAAGR;MACP,CAAC;IACD,KAAK,aAAa;MAClBA,KAAK,CAACU,WAAW,GAAGT,MAAM,CAACQ,WAAW,CAACC,WAAW;MAClD,OAAO;QACH,GAAGV;MACP,CAAC;IACD,KAAK,OAAO;MACZA,KAAK,CAACW,KAAK,GAAGV,MAAM,CAACQ,WAAW,CAACE,KAAK;MACtC,OAAO;QACH,GAAGX;MACP,CAAC;IACD,KAAK,SAAS;MACdA,KAAK,CAACY,OAAO,GAAGX,MAAM,CAACQ,WAAW,CAACG,OAAO;MAC1C,OAAO;QACH,GAAGZ;MACP,CAAC;IACD,KAAK,OAAO;MACZA,KAAK,CAACa,KAAK,GAAGZ,MAAM,CAACQ,WAAW,CAACI,KAAK;MACtC,OAAO;QACH,GAAGb;MACP,CAAC;IACD,KAAK,WAAW;MAChB;MACA,OAAO;QACH,GAAGA;MACP,CAAC;IACD,KAAK,aAAa;MAClBA,KAAK,CAACc,WAAW,GAAGb,MAAM,CAACQ,WAAW,CAACK,WAAW;MAClD,OAAO;QACH,GAAGd;MACP,CAAC;IACD,KAAK,YAAY;MACjBA,KAAK,CAACe,UAAU,GAAGd,MAAM,CAACQ,WAAW,CAACM,UAAU;MAChD,OAAO;QACH,GAAGf;MACP,CAAC;MACD,OAAO;QACH,GAAGA;MACP,CAAC;IACD,KAAK,cAAc;MACnB;MACA,OAAO;QACH,GAAGA;MACP,CAAC;IACD;MACA,OAAOA,KAAK;EAAC;AAErB;AAEA,OAAO,SAASgB,mBAAmB,CAC/BhB,KAA6B,EAC7BC,MAAgC,EAC9B;EACE,QAAQA,MAAM,CAACC,IAAI;IACnB,KAAK,MAAM;MACPF,KAAK,CAACQ,IAAI,GAAGP,MAAM,CAACgB,mBAAmB,CAACT,IAAI;MAC5C,OAAO;QACP,GAAGR;MACH,CAAC;IACL,KAAK,aAAa;MACdA,KAAK,CAACU,WAAW,GAAGT,MAAM,CAACgB,mBAAmB,CAACP,WAAW;MAC1D,OAAO;QACP,GAAGV;MACH,CAAC;IACL;MACI,OAAOA,KAAK;EAAC;AAErB;AAEJ,OAAO,SAASkB,eAAe,CAAClB,KAAoB,EAAEC,MAA4B,EAAE;EAChF,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZF,KAAK,CAACE,IAAI,GAAGD,MAAM,CAACG,OAAO,CAACF,IAAI;MACpC,OAAO;QACH,GAAGF;MACP,CAAC;IACD;MACA,OAAOA,KAAK;EAAC;AAErB"},"metadata":{},"sourceType":"module"}