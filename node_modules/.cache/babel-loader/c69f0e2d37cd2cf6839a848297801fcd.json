{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QuoteType = void 0;\nvar decode_js_1 = require(\"entities/lib/decode.js\");\nvar CharCodes;\n(function (CharCodes) {\n  CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n  CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n  CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n  CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n  CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n  CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n  CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n  CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n  CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n  CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n  CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n  CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n  CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n  CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n  CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n  CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n  CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n  CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n  CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n  CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n  CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n  CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n  CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n  CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n  CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n  CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n  CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n  State[State[\"Text\"] = 1] = \"Text\";\n  State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n  State[State[\"InTagName\"] = 3] = \"InTagName\";\n  State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n  State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n  State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n  State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n  // Attributes\n  State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n  State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n  State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n  State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n  State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n  State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n  State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n  // Declarations\n  State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n  State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n  // Processing instructions\n  State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n  // Comments & CDATA\n  State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n  State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n  State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n  State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n  // Special tags\n  State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n  State[State[\"BeforeSpecialT\"] = 23] = \"BeforeSpecialT\";\n  State[State[\"SpecialStartSequence\"] = 24] = \"SpecialStartSequence\";\n  State[State[\"InSpecialTag\"] = 25] = \"InSpecialTag\";\n  State[State[\"InEntity\"] = 26] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n  return c === CharCodes.Space || c === CharCodes.NewLine || c === CharCodes.Tab || c === CharCodes.FormFeed || c === CharCodes.CarriageReturn;\n}\nfunction isEndOfTagSection(c) {\n  return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n  return c >= CharCodes.LowerA && c <= CharCodes.LowerZ || c >= CharCodes.UpperA && c <= CharCodes.UpperZ;\n}\nvar QuoteType;\n(function (QuoteType) {\n  QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n  QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n  QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n  QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (exports.QuoteType = QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nvar Sequences = {\n  Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n  // CDATA[\n  CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n  // ]]>\n  CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n  // `-->`\n  ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n  // `</script`\n  StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n  // `</style`\n  TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]),\n  // `</title`\n  TextareaEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61]) // `</textarea`\n};\n\nvar Tokenizer = /** @class */function () {\n  function Tokenizer(_a, cbs) {\n    var _b = _a.xmlMode,\n      xmlMode = _b === void 0 ? false : _b,\n      _c = _a.decodeEntities,\n      decodeEntities = _c === void 0 ? true : _c;\n    var _this = this;\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = State.Text;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = State.Text;\n    /** For special parsing behavior inside of script and style tags. */\n    this.isSpecial = false;\n    /** Indicates whether the tokenizer has been paused. */\n    this.running = true;\n    /** The offset of the current buffer. */\n    this.offset = 0;\n    this.currentSequence = undefined;\n    this.sequenceIndex = 0;\n    this.xmlMode = xmlMode;\n    this.decodeEntities = decodeEntities;\n    this.entityDecoder = new decode_js_1.EntityDecoder(xmlMode ? decode_js_1.xmlDecodeTree : decode_js_1.htmlDecodeTree, function (cp, consumed) {\n      return _this.emitCodePoint(cp, consumed);\n    });\n  }\n  Tokenizer.prototype.reset = function () {\n    this.state = State.Text;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = State.Text;\n    this.currentSequence = undefined;\n    this.running = true;\n    this.offset = 0;\n  };\n  Tokenizer.prototype.write = function (chunk) {\n    this.offset += this.buffer.length;\n    this.buffer = chunk;\n    this.parse();\n  };\n  Tokenizer.prototype.end = function () {\n    if (this.running) this.finish();\n  };\n  Tokenizer.prototype.pause = function () {\n    this.running = false;\n  };\n  Tokenizer.prototype.resume = function () {\n    this.running = true;\n    if (this.index < this.buffer.length + this.offset) {\n      this.parse();\n    }\n  };\n  Tokenizer.prototype.stateText = function (c) {\n    if (c === CharCodes.Lt || !this.decodeEntities && this.fastForwardTo(CharCodes.Lt)) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = State.BeforeTagName;\n      this.sectionStart = this.index;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  };\n  Tokenizer.prototype.stateSpecialStartSequence = function (c) {\n    var isEnd = this.sequenceIndex === this.currentSequence.length;\n    var isMatch = isEnd ?\n    // If we are at the end of the sequence, make sure the tag name has ended\n    isEndOfTagSection(c) :\n    // Otherwise, do a case-insensitive comparison\n    (c | 0x20) === this.currentSequence[this.sequenceIndex];\n    if (!isMatch) {\n      this.isSpecial = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = State.InTagName;\n    this.stateInTagName(c);\n  };\n  /** Look for an end tag. For <title> tags, also decode entities. */\n  Tokenizer.prototype.stateInSpecialTag = function (c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === CharCodes.Gt || isWhitespace(c)) {\n        var endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          // Spoof the index so that reported locations match up.\n          var actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.isSpecial = false;\n        this.sectionStart = endOfText + 2; // Skip over the `</`\n        this.stateInClosingTagName(c);\n        return; // We are done; skip the rest of the function.\n      }\n\n      this.sequenceIndex = 0;\n    }\n    if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd) {\n        // We have to parse entities in <title> tags.\n        if (this.decodeEntities && c === CharCodes.Amp) {\n          this.startEntity();\n        }\n      } else if (this.fastForwardTo(CharCodes.Lt)) {\n        // Outside of <title> tags, we can fast-forward.\n        this.sequenceIndex = 1;\n      }\n    } else {\n      // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n      this.sequenceIndex = Number(c === CharCodes.Lt);\n    }\n  };\n  Tokenizer.prototype.stateCDATASequence = function (c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = State.InCommentLike;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = State.InDeclaration;\n      this.stateInDeclaration(c); // Reconsume the character\n    }\n  };\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  Tokenizer.prototype.fastForwardTo = function (c) {\n    while (++this.index < this.buffer.length + this.offset) {\n      if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n        return true;\n      }\n    }\n    /*\n     * We increment the index at the end of the `parse` loop,\n     * so set it to `buffer.length - 1` here.\n     *\n     * TODO: Refactor `parse` to increment index before calling states.\n     */\n    this.index = this.buffer.length + this.offset - 1;\n    return false;\n  };\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  Tokenizer.prototype.stateInCommentLike = function (c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index, 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index, 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = State.Text;\n      }\n    } else if (this.sequenceIndex === 0) {\n      // Fast-forward to the first character of the sequence\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      // Allow long sequences, eg. --->, ]]]>\n      this.sequenceIndex = 0;\n    }\n  };\n  /**\n   * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n   *\n   * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n   * We allow anything that wouldn't end the tag.\n   */\n  Tokenizer.prototype.isTagStartChar = function (c) {\n    return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n  };\n  Tokenizer.prototype.startSpecial = function (sequence, offset) {\n    this.isSpecial = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n    this.state = State.SpecialStartSequence;\n  };\n  Tokenizer.prototype.stateBeforeTagName = function (c) {\n    if (c === CharCodes.ExclamationMark) {\n      this.state = State.BeforeDeclaration;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Questionmark) {\n      this.state = State.InProcessingInstruction;\n      this.sectionStart = this.index + 1;\n    } else if (this.isTagStartChar(c)) {\n      var lower = c | 0x20;\n      this.sectionStart = this.index;\n      if (this.xmlMode) {\n        this.state = State.InTagName;\n      } else if (lower === Sequences.ScriptEnd[2]) {\n        this.state = State.BeforeSpecialS;\n      } else if (lower === Sequences.TitleEnd[2]) {\n        this.state = State.BeforeSpecialT;\n      } else {\n        this.state = State.InTagName;\n      }\n    } else if (c === CharCodes.Slash) {\n      this.state = State.BeforeClosingTagName;\n    } else {\n      this.state = State.Text;\n      this.stateText(c);\n    }\n  };\n  Tokenizer.prototype.stateInTagName = function (c) {\n    if (isEndOfTagSection(c)) {\n      this.cbs.onopentagname(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  };\n  Tokenizer.prototype.stateBeforeClosingTagName = function (c) {\n    if (isWhitespace(c)) {\n      // Ignore\n    } else if (c === CharCodes.Gt) {\n      this.state = State.Text;\n    } else {\n      this.state = this.isTagStartChar(c) ? State.InClosingTagName : State.InSpecialComment;\n      this.sectionStart = this.index;\n    }\n  };\n  Tokenizer.prototype.stateInClosingTagName = function (c) {\n    if (c === CharCodes.Gt || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.AfterClosingTagName;\n      this.stateAfterClosingTagName(c);\n    }\n  };\n  Tokenizer.prototype.stateAfterClosingTagName = function (c) {\n    // Skip everything until \">\"\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  };\n  Tokenizer.prototype.stateBeforeAttributeName = function (c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onopentagend(this.index);\n      if (this.isSpecial) {\n        this.state = State.InSpecialTag;\n        this.sequenceIndex = 0;\n      } else {\n        this.state = State.Text;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Slash) {\n      this.state = State.InSelfClosingTag;\n    } else if (!isWhitespace(c)) {\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  };\n  Tokenizer.prototype.stateInSelfClosingTag = function (c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n      this.isSpecial = false; // Reset special state, in case of self-closing special tags\n    } else if (!isWhitespace(c)) {\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  };\n  Tokenizer.prototype.stateInAttributeName = function (c) {\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.sectionStart = this.index;\n      this.state = State.AfterAttributeName;\n      this.stateAfterAttributeName(c);\n    }\n  };\n  Tokenizer.prototype.stateAfterAttributeName = function (c) {\n    if (c === CharCodes.Eq) {\n      this.state = State.BeforeAttributeValue;\n    } else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  };\n  Tokenizer.prototype.stateBeforeAttributeValue = function (c) {\n    if (c === CharCodes.DoubleQuote) {\n      this.state = State.InAttributeValueDq;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.SingleQuote) {\n      this.state = State.InAttributeValueSq;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = State.InAttributeValueNq;\n      this.stateInAttributeValueNoQuotes(c); // Reconsume token\n    }\n  };\n\n  Tokenizer.prototype.handleInAttributeValue = function (c, quote) {\n    if (c === quote || !this.decodeEntities && this.fastForwardTo(quote)) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(quote === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single, this.index + 1);\n      this.state = State.BeforeAttributeName;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  };\n  Tokenizer.prototype.stateInAttributeValueDoubleQuotes = function (c) {\n    this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n  };\n  Tokenizer.prototype.stateInAttributeValueSingleQuotes = function (c) {\n    this.handleInAttributeValue(c, CharCodes.SingleQuote);\n  };\n  Tokenizer.prototype.stateInAttributeValueNoQuotes = function (c) {\n    if (isWhitespace(c) || c === CharCodes.Gt) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(QuoteType.Unquoted, this.index);\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  };\n  Tokenizer.prototype.stateBeforeDeclaration = function (c) {\n    if (c === CharCodes.OpeningSquareBracket) {\n      this.state = State.CDATASequence;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === CharCodes.Dash ? State.BeforeComment : State.InDeclaration;\n    }\n  };\n  Tokenizer.prototype.stateInDeclaration = function (c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.ondeclaration(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  };\n  Tokenizer.prototype.stateInProcessingInstruction = function (c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  };\n  Tokenizer.prototype.stateBeforeComment = function (c) {\n    if (c === CharCodes.Dash) {\n      this.state = State.InCommentLike;\n      this.currentSequence = Sequences.CommentEnd;\n      // Allow short comments (eg. <!-->)\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = State.InDeclaration;\n    }\n  };\n  Tokenizer.prototype.stateInSpecialComment = function (c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.oncomment(this.sectionStart, this.index, 0);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  };\n  Tokenizer.prototype.stateBeforeSpecialS = function (c) {\n    var lower = c | 0x20;\n    if (lower === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (lower === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = State.InTagName;\n      this.stateInTagName(c); // Consume the token again\n    }\n  };\n\n  Tokenizer.prototype.stateBeforeSpecialT = function (c) {\n    var lower = c | 0x20;\n    if (lower === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (lower === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = State.InTagName;\n      this.stateInTagName(c); // Consume the token again\n    }\n  };\n\n  Tokenizer.prototype.startEntity = function () {\n    this.baseState = this.state;\n    this.state = State.InEntity;\n    this.entityStart = this.index;\n    this.entityDecoder.startEntity(this.xmlMode ? decode_js_1.DecodingMode.Strict : this.baseState === State.Text || this.baseState === State.InSpecialTag ? decode_js_1.DecodingMode.Legacy : decode_js_1.DecodingMode.Attribute);\n  };\n  Tokenizer.prototype.stateInEntity = function () {\n    var length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n    // If `length` is positive, we are done with the entity.\n    if (length >= 0) {\n      this.state = this.baseState;\n      if (length === 0) {\n        this.index = this.entityStart;\n      }\n    } else {\n      // Mark buffer as consumed.\n      this.index = this.offset + this.buffer.length - 1;\n    }\n  };\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  Tokenizer.prototype.cleanup = function () {\n    // If we are inside of text or attributes, emit what we already have.\n    if (this.running && this.sectionStart !== this.index) {\n      if (this.state === State.Text || this.state === State.InSpecialTag && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === State.InAttributeValueDq || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueNq) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  };\n  Tokenizer.prototype.shouldContinue = function () {\n    return this.index < this.buffer.length + this.offset && this.running;\n  };\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  Tokenizer.prototype.parse = function () {\n    while (this.shouldContinue()) {\n      var c = this.buffer.charCodeAt(this.index - this.offset);\n      switch (this.state) {\n        case State.Text:\n          {\n            this.stateText(c);\n            break;\n          }\n        case State.SpecialStartSequence:\n          {\n            this.stateSpecialStartSequence(c);\n            break;\n          }\n        case State.InSpecialTag:\n          {\n            this.stateInSpecialTag(c);\n            break;\n          }\n        case State.CDATASequence:\n          {\n            this.stateCDATASequence(c);\n            break;\n          }\n        case State.InAttributeValueDq:\n          {\n            this.stateInAttributeValueDoubleQuotes(c);\n            break;\n          }\n        case State.InAttributeName:\n          {\n            this.stateInAttributeName(c);\n            break;\n          }\n        case State.InCommentLike:\n          {\n            this.stateInCommentLike(c);\n            break;\n          }\n        case State.InSpecialComment:\n          {\n            this.stateInSpecialComment(c);\n            break;\n          }\n        case State.BeforeAttributeName:\n          {\n            this.stateBeforeAttributeName(c);\n            break;\n          }\n        case State.InTagName:\n          {\n            this.stateInTagName(c);\n            break;\n          }\n        case State.InClosingTagName:\n          {\n            this.stateInClosingTagName(c);\n            break;\n          }\n        case State.BeforeTagName:\n          {\n            this.stateBeforeTagName(c);\n            break;\n          }\n        case State.AfterAttributeName:\n          {\n            this.stateAfterAttributeName(c);\n            break;\n          }\n        case State.InAttributeValueSq:\n          {\n            this.stateInAttributeValueSingleQuotes(c);\n            break;\n          }\n        case State.BeforeAttributeValue:\n          {\n            this.stateBeforeAttributeValue(c);\n            break;\n          }\n        case State.BeforeClosingTagName:\n          {\n            this.stateBeforeClosingTagName(c);\n            break;\n          }\n        case State.AfterClosingTagName:\n          {\n            this.stateAfterClosingTagName(c);\n            break;\n          }\n        case State.BeforeSpecialS:\n          {\n            this.stateBeforeSpecialS(c);\n            break;\n          }\n        case State.BeforeSpecialT:\n          {\n            this.stateBeforeSpecialT(c);\n            break;\n          }\n        case State.InAttributeValueNq:\n          {\n            this.stateInAttributeValueNoQuotes(c);\n            break;\n          }\n        case State.InSelfClosingTag:\n          {\n            this.stateInSelfClosingTag(c);\n            break;\n          }\n        case State.InDeclaration:\n          {\n            this.stateInDeclaration(c);\n            break;\n          }\n        case State.BeforeDeclaration:\n          {\n            this.stateBeforeDeclaration(c);\n            break;\n          }\n        case State.BeforeComment:\n          {\n            this.stateBeforeComment(c);\n            break;\n          }\n        case State.InProcessingInstruction:\n          {\n            this.stateInProcessingInstruction(c);\n            break;\n          }\n        case State.InEntity:\n          {\n            this.stateInEntity();\n            break;\n          }\n      }\n      this.index++;\n    }\n    this.cleanup();\n  };\n  Tokenizer.prototype.finish = function () {\n    if (this.state === State.InEntity) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  };\n  /** Handle any trailing data. */\n  Tokenizer.prototype.handleTrailingData = function () {\n    var endIndex = this.buffer.length + this.offset;\n    // If there is no remaining data, we are done.\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === State.InCommentLike) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex, 0);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex, 0);\n      }\n    } else if (this.state === State.InTagName || this.state === State.BeforeAttributeName || this.state === State.BeforeAttributeValue || this.state === State.AfterAttributeName || this.state === State.InAttributeName || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueDq || this.state === State.InAttributeValueNq || this.state === State.InClosingTagName) {\n      /*\n       * If we are currently in an opening or closing tag, us not calling the\n       * respective callback signals that the tag should be ignored.\n       */\n    } else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  };\n  Tokenizer.prototype.emitCodePoint = function (cp, consumed) {\n    if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {\n      if (this.sectionStart < this.entityStart) {\n        this.cbs.onattribdata(this.sectionStart, this.entityStart);\n      }\n      this.sectionStart = this.entityStart + consumed;\n      this.index = this.sectionStart - 1;\n      this.cbs.onattribentity(cp);\n    } else {\n      if (this.sectionStart < this.entityStart) {\n        this.cbs.ontext(this.sectionStart, this.entityStart);\n      }\n      this.sectionStart = this.entityStart + consumed;\n      this.index = this.sectionStart - 1;\n      this.cbs.ontextentity(cp, this.sectionStart);\n    }\n  };\n  return Tokenizer;\n}();\nexports.default = Tokenizer;","map":{"version":3,"mappings":"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","names":["CharCodes","State","isWhitespace","c","Space","NewLine","Tab","FormFeed","CarriageReturn","isEndOfTagSection","Slash","Gt","isASCIIAlpha","LowerA","LowerZ","UpperA","UpperZ","QuoteType","Sequences","Cdata","Uint8Array","CdataEnd","CommentEnd","ScriptEnd","StyleEnd","TitleEnd","TextareaEnd","_a","cbs","_b","xmlMode","_c","decodeEntities","Text","undefined","entityDecoder","decode_js_1","cp","consumed","emitCodePoint","Tokenizer","state","buffer","sectionStart","index","baseState","currentSequence","running","offset","chunk","length","parse","finish","Lt","fastForwardTo","ontext","BeforeTagName","Amp","startEntity","isEnd","sequenceIndex","isMatch","isSpecial","InTagName","stateInTagName","endOfText","actualIndex","stateInClosingTagName","Number","InCommentLike","InDeclaration","stateInDeclaration","charCodeAt","oncdata","oncomment","sequence","SpecialStartSequence","ExclamationMark","BeforeDeclaration","Questionmark","InProcessingInstruction","isTagStartChar","lower","BeforeSpecialS","BeforeSpecialT","BeforeClosingTagName","stateText","onopentagname","BeforeAttributeName","stateBeforeAttributeName","InClosingTagName","InSpecialComment","onclosetag","AfterClosingTagName","stateAfterClosingTagName","onopentagend","InSpecialTag","InSelfClosingTag","InAttributeName","onselfclosingtag","Eq","onattribname","AfterAttributeName","stateAfterAttributeName","BeforeAttributeValue","onattribend","NoValue","DoubleQuote","InAttributeValueDq","SingleQuote","InAttributeValueSq","InAttributeValueNq","stateInAttributeValueNoQuotes","quote","onattribdata","Double","Single","handleInAttributeValue","Unquoted","OpeningSquareBracket","CDATASequence","Dash","BeforeComment","ondeclaration","onprocessinginstruction","startSpecial","InEntity","entityStart","Strict","Legacy","Attribute","write","shouldContinue","stateSpecialStartSequence","stateInSpecialTag","stateCDATASequence","stateInAttributeValueDoubleQuotes","stateInAttributeName","stateInCommentLike","stateInSpecialComment","stateBeforeTagName","stateInAttributeValueSingleQuotes","stateBeforeAttributeValue","stateBeforeClosingTagName","stateBeforeSpecialS","stateBeforeSpecialT","stateInSelfClosingTag","stateBeforeDeclaration","stateBeforeComment","stateInProcessingInstruction","stateInEntity","cleanup","end","handleTrailingData","onend","endIndex","onattribentity","ontextentity"],"sources":["https://raw.githubusercontent.com/fb55/htmlparser2/e2939a6c7b05d5c4845b4a2e458a4fc0a65a321d/src/Tokenizer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}