{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nexport default function useGeoLocation() {\n  _s();\n  const [locationData, setLocationData] = useState(null);\n  useEffect(() => {\n    getLocation();\n  }, []);\n  async function getLocation() {\n    // it will return the following attributes:\n    // country, countryCode, regionName, city, lat, lon, zip and timezone\n    const res = await axios.get(\"http://ip-api.com/json\");\n    console.log(res);\n    if (res.status === 200) setLocationData(res.data);\n  }\n  return {\n    city: locationData === null || locationData === void 0 ? void 0 : locationData.city,\n    lat: locationData === null || locationData === void 0 ? void 0 : locationData.lat,\n    lon: locationData === null || locationData === void 0 ? void 0 : locationData.lon\n  };\n}\n_s(useGeoLocation, \"JYF7+WzDVHSio/zktKgu2f+Vnnk=\");","map":{"version":3,"names":["axios","useEffect","useState","useGeoLocation","_s","locationData","setLocationData","getLocation","res","get","console","log","status","data","city","lat","lon"],"sources":["C:/Users/yatsenkosa/Desktop/Тестовые задания/site/src/components/Location/Location.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\ntype Location = {\r\n  city: string,\r\n  lat: string,\r\n  lon: string\r\n}\r\n\r\nexport default function useGeoLocation() {\r\n    const [locationData, setLocationData] = useState<Location | null>(null)\r\n    useEffect(() => {\r\n        getLocation();\r\n    }, []);\r\n    async function getLocation() {\r\n        // it will return the following attributes:\r\n        // country, countryCode, regionName, city, lat, lon, zip and timezone\r\n        const res = await axios.get(\"http://ip-api.com/json\");\r\n        console.log(res);\r\n        if (res.status === 200)\r\n            setLocationData(res.data)\r\n    }\r\n    return {\r\n      city: locationData?.city,\r\n      lat: locationData?.lat,\r\n      lon: locationData?.lon,\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAQhC,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAkB,IAAI,CAAC;EACvED,SAAS,CAAC,MAAM;IACZM,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,eAAeA,WAAWA,CAAA,EAAG;IACzB;IACA;IACA,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,wBAAwB,CAAC;IACrDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,IAAIA,GAAG,CAACI,MAAM,KAAK,GAAG,EAClBN,eAAe,CAACE,GAAG,CAACK,IAAI,CAAC;EACjC;EACA,OAAO;IACLC,IAAI,EAAET,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAES,IAAI;IACxBC,GAAG,EAAEV,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEU,GAAG;IACtBC,GAAG,EAAEX,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEW;EACrB,CAAC;AACL;AAACZ,EAAA,CAlBuBD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}